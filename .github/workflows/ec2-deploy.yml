name: Build, Push Docker Image, and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

    - name: Build and push Docker image to ECR
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.ECR_REPOSITORY_URI }}:latest

    - name: Deploy Docker image to EC2
      env:
        ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
      run: |
        # Fetch the public DNS of the EC2 instance
        EC2_PUBLIC_DNS=$(aws ec2 describe-instances --instance-ids $EC2_INSTANCE_ID --query "Reservations[0].Instances[0].PublicDnsName" --output text --region $AWS_REGION)
          
        # Save the SSH private key to a file and set permissions
        echo "${{ secrets.EC2_SSH_KEY }}" > BrainWaveCert.pem
        chmod 400 BrainWaveCert.pem
          
        # SSH into the EC2 instance and deploy the Docker container
        ssh -o StrictHostKeyChecking=no -i BrainWaveCert.pem ec2-user@$EC2_PUBLIC_DNS << 'EOF'
            # Log in to ECR
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
            
            # Pull the latest Docker image from ECR
            docker pull $ECR_REPOSITORY_URI:latest
            
            # Stop the currently running container (if any)
            docker stop my-container || true
            
            # Remove the old container
            docker rm my-container || true
            
            # Run a new container with the latest image
            docker run -d --name my-container -p 80:80 $ECR_REPOSITORY_URI:latest
          EOF
          
          # Clean up the SSH key file
          rm BrainWaveCert.pem
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}